/**
 * Centralized error codes for the Poker Tracker API
 * These codes are used instead of human-readable messages to enable
 * proper localization on the frontend
 */

export const API_ERROR_CODES = {
  // Authentication & Authorization
  AUTH_INVALID_TOKEN: "AUTH_INVALID_TOKEN",
  AUTH_TOKEN_EXPIRED: "AUTH_TOKEN_EXPIRED",
  AUTH_PLAYER_NOT_FOUND: "AUTH_PLAYER_NOT_FOUND",
  AUTH_GOOGLE_ACCOUNT_ALREADY_LINKED: "AUTH_GOOGLE_ACCOUNT_ALREADY_LINKED",

  // Validation Errors
  VALIDATION_GOOGLE_ID_REQUIRED: "VALIDATION_GOOGLE_ID_REQUIRED",
  VALIDATION_GOOGLE_ID_INVALID: "VALIDATION_GOOGLE_ID_INVALID",
  VALIDATION_EMAIL_REQUIRED: "VALIDATION_EMAIL_REQUIRED",
  VALIDATION_EMAIL_INVALID: "VALIDATION_EMAIL_INVALID",
  VALIDATION_NAME_REQUIRED: "VALIDATION_NAME_REQUIRED",
  VALIDATION_NAME_INVALID: "VALIDATION_NAME_INVALID",
  VALIDATION_NAME_LENGTH: "VALIDATION_NAME_LENGTH",
  VALIDATION_PLAYER_ID_REQUIRED: "VALIDATION_PLAYER_ID_REQUIRED",
  VALIDATION_PLAYER_ID_INVALID: "VALIDATION_PLAYER_ID_INVALID",
  VALIDATION_LOCATION_REQUIRED: "VALIDATION_LOCATION_REQUIRED",
  VALIDATION_LOCATION_INVALID: "VALIDATION_LOCATION_INVALID",
  VALIDATION_STAKES_REQUIRED: "VALIDATION_STAKES_REQUIRED",
  VALIDATION_STAKES_INVALID: "VALIDATION_STAKES_INVALID",
  VALIDATION_BUY_IN_REQUIRED: "VALIDATION_BUY_IN_REQUIRED",
  VALIDATION_BUY_IN_INVALID: "VALIDATION_BUY_IN_INVALID",
  VALIDATION_CASH_OUT_REQUIRED: "VALIDATION_CASH_OUT_REQUIRED",
  VALIDATION_CASH_OUT_INVALID: "VALIDATION_CASH_OUT_INVALID",
  VALIDATION_TRANSACTION_TYPE_REQUIRED: "VALIDATION_TRANSACTION_TYPE_REQUIRED",
  VALIDATION_TRANSACTION_TYPE_INVALID: "VALIDATION_TRANSACTION_TYPE_INVALID",
  VALIDATION_AMOUNT_REQUIRED: "VALIDATION_AMOUNT_REQUIRED",
  VALIDATION_AMOUNT_INVALID: "VALIDATION_AMOUNT_INVALID",
  VALIDATION_AMOUNT_POSITIVE: "VALIDATION_AMOUNT_POSITIVE",
  VALIDATION_TRANSACTION_ID_REQUIRED: "VALIDATION_TRANSACTION_ID_REQUIRED",
  VALIDATION_SESSION_ID_REQUIRED: "VALIDATION_SESSION_ID_REQUIRED",
  VALIDATION_SESSION_ID_INVALID: "VALIDATION_SESSION_ID_INVALID",
  VALIDATION_NOTES_REQUIRED: "VALIDATION_NOTES_REQUIRED",
  VALIDATION_NOTES_INVALID: "VALIDATION_NOTES_INVALID",
  VALIDATION_NAME_QUERY_REQUIRED: "VALIDATION_NAME_QUERY_REQUIRED",
  VALIDATION_NAME_QUERY_INVALID: "VALIDATION_NAME_QUERY_INVALID",
  VALIDATION_LANGUAGE_NOT_SUPPORTED: "VALIDATION_LANGUAGE_NOT_SUPPORTED",

  // Business Logic Errors
  BUSINESS_PLAYER_NOT_FOUND: "BUSINESS_PLAYER_NOT_FOUND",
  BUSINESS_PLAYER_ALREADY_EXISTS: "BUSINESS_PLAYER_ALREADY_EXISTS",
  BUSINESS_SESSION_NOT_FOUND: "BUSINESS_SESSION_NOT_FOUND",
  BUSINESS_ACTIVE_SESSION_EXISTS: "BUSINESS_ACTIVE_SESSION_EXISTS",
  BUSINESS_CANNOT_ADD_TRANSACTION_INACTIVE:
    "BUSINESS_CANNOT_ADD_TRANSACTION_INACTIVE",
  BUSINESS_CANNOT_END_INACTIVE_SESSION: "BUSINESS_CANNOT_END_INACTIVE_SESSION",
  BUSINESS_CANNOT_CANCEL_INACTIVE_SESSION:
    "BUSINESS_CANNOT_CANCEL_INACTIVE_SESSION",
  BUSINESS_CURRENCY_NOT_FOUND: "BUSINESS_CURRENCY_NOT_FOUND",
  BUSINESS_TRANSACTION_NOT_FOUND: "BUSINESS_TRANSACTION_NOT_FOUND",

  // Database Operation Errors
  DATABASE_PLAYER_SAVE_FAILED: "DATABASE_PLAYER_SAVE_FAILED",
  DATABASE_PLAYER_DELETE_FAILED: "DATABASE_PLAYER_DELETE_FAILED",
  DATABASE_PLAYER_FIND_FAILED: "DATABASE_PLAYER_FIND_FAILED",
  DATABASE_PLAYER_FIND_BY_EMAIL_FAILED: "DATABASE_PLAYER_FIND_BY_EMAIL_FAILED",
  DATABASE_PLAYER_FIND_BY_GOOGLE_ID_FAILED:
    "DATABASE_PLAYER_FIND_BY_GOOGLE_ID_FAILED",
  DATABASE_PLAYER_FIND_ALL_FAILED: "DATABASE_PLAYER_FIND_ALL_FAILED",
  DATABASE_PLAYER_FIND_BY_NAME_FAILED: "DATABASE_PLAYER_FIND_BY_NAME_FAILED",
  DATABASE_SESSION_SAVE_FAILED: "DATABASE_SESSION_SAVE_FAILED",
  DATABASE_SESSION_DELETE_FAILED: "DATABASE_SESSION_DELETE_FAILED",
  DATABASE_SESSION_FIND_FAILED: "DATABASE_SESSION_FIND_FAILED",
  DATABASE_SESSION_FIND_ALL_FAILED: "DATABASE_SESSION_FIND_ALL_FAILED",
  DATABASE_SESSION_FIND_ACTIVE_FAILED: "DATABASE_SESSION_FIND_ACTIVE_FAILED",
  DATABASE_SESSION_FIND_COMPLETED_FAILED:
    "DATABASE_SESSION_FIND_COMPLETED_FAILED",
  DATABASE_SESSION_FIND_RECENT_FAILED: "DATABASE_SESSION_FIND_RECENT_FAILED",
  DATABASE_SESSION_FIND_BY_FILTERS_FAILED:
    "DATABASE_SESSION_FIND_BY_FILTERS_FAILED",
  DATABASE_TRANSACTION_SAVE_FAILED: "DATABASE_TRANSACTION_SAVE_FAILED",
  DATABASE_TRANSACTION_DELETE_FAILED: "DATABASE_TRANSACTION_DELETE_FAILED",
  DATABASE_TRANSACTION_FIND_FAILED: "DATABASE_TRANSACTION_FIND_FAILED",
  DATABASE_TRANSACTION_FIND_ALL_FAILED: "DATABASE_TRANSACTION_FIND_ALL_FAILED",
  DATABASE_TRANSACTION_FIND_BY_FILTERS_FAILED:
    "DATABASE_TRANSACTION_FIND_BY_FILTERS_FAILED",
  DATABASE_TRANSACTION_BEGIN_FAILED: "DATABASE_TRANSACTION_BEGIN_FAILED",
  DATABASE_TRANSACTION_COMMIT_FAILED: "DATABASE_TRANSACTION_COMMIT_FAILED",
  DATABASE_TRANSACTION_ROLLBACK_FAILED: "DATABASE_TRANSACTION_ROLLBACK_FAILED",

  // API Operation Errors
  API_CREATE_PLAYER_FAILED: "API_CREATE_PLAYER_FAILED",
  API_GET_PLAYER_FAILED: "API_GET_PLAYER_FAILED",
  API_GET_PLAYER_STATS_FAILED: "API_GET_PLAYER_STATS_FAILED",
  API_UPDATE_PLAYER_FAILED: "API_UPDATE_PLAYER_FAILED",
  API_UPDATE_PLAYER_BANKROLL_FAILED: "API_UPDATE_PLAYER_BANKROLL_FAILED",
  API_DELETE_PLAYER_FAILED: "API_DELETE_PLAYER_FAILED",
  API_GET_PLAYERS_FAILED: "API_GET_PLAYERS_FAILED",
  API_SEARCH_PLAYERS_FAILED: "API_SEARCH_PLAYERS_FAILED",
  API_START_SESSION_FAILED: "API_START_SESSION_FAILED",
  API_END_SESSION_FAILED: "API_END_SESSION_FAILED",
  API_ADD_TRANSACTION_FAILED: "API_ADD_TRANSACTION_FAILED",
  API_GET_SESSION_FAILED: "API_GET_SESSION_FAILED",
  API_LIST_SESSIONS_FAILED: "API_LIST_SESSIONS_FAILED",
  API_CANCEL_SESSION_FAILED: "API_CANCEL_SESSION_FAILED",
  API_UPDATE_SESSION_NOTES_FAILED: "API_UPDATE_SESSION_NOTES_FAILED",
  API_GET_PLAYER_SESSIONS_FAILED: "API_GET_PLAYER_SESSIONS_FAILED",
  API_GET_ACTIVE_SESSION_FAILED: "API_GET_ACTIVE_SESSION_FAILED",

  // System Errors
  SYSTEM_RATE_LIMIT_EXCEEDED: "SYSTEM_RATE_LIMIT_EXCEEDED",
  SYSTEM_UNKNOWN_ERROR: "SYSTEM_UNKNOWN_ERROR",
  SYSTEM_INTERNAL_ERROR: "SYSTEM_INTERNAL_ERROR",
} as const;

export type APIErrorCode =
  (typeof API_ERROR_CODES)[keyof typeof API_ERROR_CODES];

/**
 * Error code categories for easier management
 */
export const ERROR_CATEGORIES = {
  AUTH: "AUTH",
  VALIDATION: "VALIDATION",
  BUSINESS: "BUSINESS",
  DATABASE: "DATABASE",
  API: "API",
  SYSTEM: "SYSTEM",
} as const;

export type ErrorCategory =
  (typeof ERROR_CATEGORIES)[keyof typeof ERROR_CATEGORIES];

/**
 * Get the category of an error code
 */
export function getErrorCategory(errorCode: APIErrorCode): ErrorCategory {
  if (errorCode.startsWith("AUTH_")) return ERROR_CATEGORIES.AUTH;
  if (errorCode.startsWith("VALIDATION_")) return ERROR_CATEGORIES.VALIDATION;
  if (errorCode.startsWith("BUSINESS_")) return ERROR_CATEGORIES.BUSINESS;
  if (errorCode.startsWith("DATABASE_")) return ERROR_CATEGORIES.DATABASE;
  if (errorCode.startsWith("API_")) return ERROR_CATEGORIES.API;
  if (errorCode.startsWith("SYSTEM_")) return ERROR_CATEGORIES.SYSTEM;
  return ERROR_CATEGORIES.SYSTEM;
}

/**
 * Standard API error response structure
 */
export interface APIErrorResponse {
  success: false;
  error: string;
  code: APIErrorCode;
  statusCode: number;
  details?: Record<string, any>;
}

/**
 * Standard API success response structure
 */
export interface APISuccessResponse<T = any> {
  success: true;
  data: T;
}

/**
 * Union type for all API responses
 */
export type APIResponse<T = any> = APISuccessResponse<T> | APIErrorResponse;
